.post-content {
	--grid-row-gap: 0;
	--grid-column-gap: var(--space-m);
	grid-template-columns: 1fr;

	> * {
		grid-column: 1/-1;
	}

	h2,
	h3,
	:where(.post-blockquote, .post-image),
	:where(.post-pub-date, .post-blockquote, .post-image) + * {
		--flow-space: var(--space-m-l);
	}

	@media (--md-n-above) {
		grid-template-columns: repeat(5, 1fr);

		> :not(.post-title, .post-pub-date, .post-image) {
			grid-column: 1/-2;
		}

		> :where(.post-title, .post-pub-date, .post-image) {
			grid-column: 1/-1;
		}

		> .post-image > * {
			grid-column: 1/-1;
		}
	}

	@media (--xl-n-above) {
		> :not(.post-image) {
			grid-column: 2/-2;
		}

		> .post-title {
			grid-column: 2/-1;
		}

		> .post-image figcaption {
			grid-column: 2/-1;
		}
	}
}

.post-pub-date {
	--flow-space: 0;
	order: -1;
	font-size: var(--step--1);
	font-variant-caps: all-small-caps;
	font-variant-numeric: tabular-nums;

	[aria-hidden="true"] {
		color: var(--color-accent);
	}
}

.post-title {
	margin-block-start: var(--space-s);
}

.post-blockquote {
	--grid-row-gap: var(--space-xs);
	--grid-column-gap: var(--space-xs);
	grid-template-columns: auto 1fr;

	> * {
		grid-column: 2/-1;
	}

	&:before {
		content: "";
		inline-size: var(--space-2xs);
		grid-row: 1/3;
		background-color: var(--color-accent);
		background-image: var(--dots-pattern);
		mask-image: url(/images/grunge-texture-comp-13.png);
		mask-size: 50% 50%;
	}

	blockquote {
		--flow-space: 1ex;
		font-size: var(--step-1);
		line-height: var(--leading-snug);
	}

	figcaption {
		font-size: var(--step--1);
	}
}

.post-image {
	--grid-row-gap: var(--space-xs);
	grid-template-columns: subgrid;

	figcaption {
		max-inline-size: var(--measure);
		font-size: var(--step--2);
		text-wrap: pretty;
	}

	img {
		@media (--xxl-n-below) {
			margin-inline-start: calc(-1 * var(--dynamic-page-gutter));
			min-inline-size: calc(
				100% + var(--dynamic-page-gutter) + var(--dynamic-page-gutter)
			);
			block-size: auto;
		}

		@media (--motionOK) {
			@supports (animation-timeline: view()) {
				--inset-distance: var(--dynamic-page-gutter);

				view-timeline-name: --revealing-image;
				view-timeline-axis: block;
				animation: reveal linear both;
				animation-timeline: --revealing-image;
				animation-range: entry 50% contain 0%;

				@media (--md-n-above) and (--xxl-n-below) {
					--inset-distance: calc(
						var(--dynamic-page-gutter) +
							((100vw - (2 * var(--dynamic-page-gutter))) / 5)
					);
				}

				@media (--xxl-n-above) {
					--inset-distance: calc(
						(100vw - (2 * var(--dynamic-page-gutter))) / 5
					);
				}
			}
		}
	}
}

@keyframes reveal {
	from {
		clip-path: inset(0% var(--inset-distance) 0% var(--inset-distance));
	}
	to {
		clip-path: inset(0% 0% 0% 0%);
	}
}
